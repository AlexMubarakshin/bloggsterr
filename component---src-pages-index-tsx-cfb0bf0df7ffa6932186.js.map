{"version":3,"sources":["webpack:///./src/components/article-list-item.tsx","webpack:///./src/pages/index.tsx"],"names":["ArticleListItem","node","title","frontmatter","description","style","marginBottom","rhythm","to","path","date","dangerouslySetInnerHTML","__html","excerpt","pageQuery","IndexPage","edges","data","allMarkdownRemark","location","articles","filter","edge","map","article","key","id"],"mappings":"kKA+BeA,EArByC,SAAC,GAAmC,IAAjCC,EAAiC,EAAjCA,KACnDC,EAAQD,EAAKE,YAAYD,OAASD,EAAKE,YAAYC,YACzD,OACE,+BACE,8BACE,sBAAIC,MAAO,CAAEC,aAAcC,YAAO,OAChC,gBAAC,OAAD,CAAMC,GAAIP,EAAKE,YAAYM,MAAOP,IAEpC,6BAAQD,EAAKE,YAAYO,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQX,EAAKE,YAAYC,aAAeH,EAAKY,c,YCvBzD,0CAgBA,IA0BaC,EAAY,aAmBVC,UA7C6B,SAAC,GAKvB,IAHGC,EAGH,EAJpBC,KACEC,kBAAqBF,MAEvBG,EACoB,EADpBA,SAEMC,EAAWJ,EAAMK,QAAO,SAAAC,GAAI,QAAMA,EAAKrB,KAAKE,YAAYO,QAE9D,OACE,gBAAC,IAAD,CACES,SAAUA,GAEV,gBAAC,IAAD,CAAKjB,MAAM,SACX,gBAAC,IAAD,MAEEkB,EAASG,KAAI,SAACC,GAAD,OACX,gBAAC,EAAD,CACEC,IAAKD,EAAQvB,KAAKyB,GAClBzB,KAAMuB,EAAQvB","file":"component---src-pages-index-tsx-cfb0bf0df7ffa6932186.js","sourcesContent":["import * as React from 'react';\nimport { rhythm } from '../utils/typography';\nimport { Link } from 'gatsby';\n\nimport { TNode } from '../types/global';\n\ntype ArticleListItemProps = {\n  node: TNode;\n}\n\nconst ArticleListItem: React.FC<ArticleListItemProps> = ({ node }: ArticleListItemProps) => {\n  const title = node.frontmatter.title || node.frontmatter.description;\n  return (\n    <article>\n      <header>\n        <h3 style={{ marginBottom: rhythm(0.25) }}>\n          <Link to={node.frontmatter.path}>{title}</Link>\n        </h3>\n        <small>{node.frontmatter.date}</small>\n      </header>\n      <section>\n        <p\n          dangerouslySetInnerHTML={{\n            __html: node.frontmatter.description || node.excerpt\n          }}\n        />\n      </section>\n    </article>\n  );\n};\n\nexport default ArticleListItem;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { TSite, TMarkdown, TLocation, TPageContext } from '../types/global';\n\nimport ArticleListItem from '../components/article-list-item';\nimport Bio from '../components/bio';\n\ntype IndexPageProps = {\n  data: { site: TSite; allMarkdownRemark: TMarkdown };\n  location: TLocation;\n  pageContext: TPageContext;\n}\n\nconst IndexPage: React.FC<IndexPageProps> = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n  location,\n}: IndexPageProps) => {\n  const articles = edges.filter(edge => !!edge.node.frontmatter.date);\n\n  return (\n    <Layout\n      location={location}\n    >\n      <SEO title=\"Home\" />\n      <Bio />\n      {\n        articles.map((article) => (\n          <ArticleListItem\n            key={article.node.id}\n            node={article.node}\n          />\n        ))\n      }\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}